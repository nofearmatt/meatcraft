/**
 * –°–¢–†–ê–ù–ò–¶–ê –ù–ê–ë–û–†–û–í - –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–°–¢–¨
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–æ–∫ –Ω–∞–±–æ—Ä–æ–≤, —Ä–∞—Å—á–µ—Ç –≤—ã–≥–æ–¥—ã, –∞–Ω–∏–º–∞—Ü–∏–∏
 */

document.addEventListener('DOMContentLoaded', function() {
    
    // –≠–õ–ï–ú–ï–ù–¢–´ –°–¢–†–ê–ù–ò–¶–´
    const setBuyButtons = document.querySelectorAll('.set-buy-btn');
    const customizeLinks = document.querySelectorAll('.set-customize-link');
    const cartCountElement = document.querySelector('.cart-count');
    
    // –î–ê–ù–ù–´–ï –û –ù–ê–ë–û–†–ê–•
    const setsData = {
        'master-trial': {
            name: '–ù–∞–±–æ—Ä "–ü—Ä–æ–±–∞ –ú–∞—Å—Ç–µ—Ä–∞"',
            price: 490,
            oldPrice: 585,
            items: 3,
            discount: 15
        },
        'craftsman-stock': {
            name: '–ù–∞–±–æ—Ä "–ó–∞–ø–∞—Å –†–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫–∞"',
            price: 920,
            oldPrice: 1160,
            items: 6,
            discount: 20
        },
        'master-box': {
            name: '–ù–∞–±–æ—Ä "–Ø—â–∏–∫ –ú–∞—Å—Ç–µ—Ä–∞"',
            price: 1290,
            oldPrice: 1740,
            items: 9,
            discount: 25
        }
    };
    
    // –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö –ü–û–ö–£–ü–ö–ò
    setBuyButtons.forEach((button, index) => {
        button.addEventListener('click', function() {
            const setItem = this.closest('.set-item');
            const setName = setItem.querySelector('.set-name').textContent;
            const priceElement = setItem.querySelector('.price-current');
            const price = priceElement.textContent;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –Ω–∞–±–æ—Ä–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
            const setTypes = ['master-trial', 'craftsman-stock', 'master-box'];
            const setType = setTypes[index];
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
            addSetToCart(setType, setName, price, this);
        });
    });
    
    // –§–£–ù–ö–¶–ò–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ù–ê–ë–û–†–ê –í –ö–û–†–ó–ò–ù–£
    function addSetToCart(setType, setName, price, button) {
        const setInfo = setsData[setType];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
        let currentCount = parseInt(cartCountElement.textContent) || 0;
        cartCountElement.textContent = currentCount + setInfo.items;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏
        const originalText = button.textContent;
        const originalStyle = button.style.cssText;
        
        button.style.background = 'linear-gradient(135deg, #2E7D32 0%, #1B5E20 100%)';
        button.textContent = '–ù–∞–±–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω!';
        button.style.transform = 'scale(0.98)';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
        animateCartCounter(setInfo.items);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–≥–æ–¥–µ
        showSavingsNotification(setInfo);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        setTimeout(() => {
            button.textContent = originalText;
            button.style.cssText = originalStyle;
            button.style.transform = 'scale(1)';
        }, 2000);
        
        // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É
        console.log(`–î–æ–±–∞–≤–ª–µ–Ω –Ω–∞–±–æ—Ä: ${setName}`);
        console.log(`–í—ã–≥–æ–¥–∞: ${setInfo.discount}% (—ç–∫–æ–Ω–æ–º–∏—è ${setInfo.oldPrice - setInfo.price} ‚ÇΩ)`);
    }
    
    // –ê–ù–ò–ú–ê–¶–ò–Ø –°–ß–ï–¢–ß–ò–ö–ê –ö–û–†–ó–ò–ù–´
    function animateCartCounter(itemsAdded) {
        let currentScale = 1;
        let pulses = 0;
        const maxPulses = itemsAdded;
        
        const pulseInterval = setInterval(() => {
            if (pulses >= maxPulses) {
                clearInterval(pulseInterval);
                cartCountElement.style.transform = 'scale(1)';
                cartCountElement.style.backgroundColor = 'var(--color-wine-red)';
                return;
            }
            
            cartCountElement.style.transform = `scale(${currentScale === 1 ? 1.4 : 1})`;
            cartCountElement.style.backgroundColor = currentScale === 1 ? '#2E7D32' : 'var(--color-wine-red)';
            currentScale = currentScale === 1 ? 1.4 : 1;
            pulses++;
        }, 200);
    }
    
    // –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û –í–´–ì–û–î–ï
    function showSavingsNotification(setInfo) {
        const savings = setInfo.oldPrice - setInfo.price;
        
        const notification = document.createElement('div');
        notification.innerHTML = `
            <div style="display: flex; align-items: center; gap: 15px;">
                <div style="font-size: 2rem;">üí∞</div>
                <div>
                    <div style="font-weight: 700; margin-bottom: 5px;">–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!</div>
                    <div style="font-size: 14px;">–í—ã —ç–∫–æ–Ω–æ–º–∏—Ç–µ ${savings} ‚ÇΩ (${setInfo.discount}%)</div>
                </div>
            </div>
        `;
        
        notification.style.cssText = `
            position: fixed;
            top: 100px;
            right: 20px;
            background: linear-gradient(135deg, #2E7D32 0%, #1B5E20 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            font-family: var(--font-headings);
            font-size: 14px;
            z-index: 10000;
            transform: translateX(100%);
            transition: transform 0.4s ease;
            box-shadow: 0 10px 30px rgba(46, 125, 50, 0.3);
            max-width: 300px;
        `;
        
        document.body.appendChild(notification);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 400);
        }, 4000);
    }
    
    // –û–ë–†–ê–ë–û–¢–ö–ê –°–°–´–õ–û–ö –ö–ê–°–¢–û–ú–ò–ó–ê–¶–ò–ò
    customizeLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const setItem = this.closest('.set-item');
            const setName = setItem.querySelector('.set-name').textContent;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –≤–µ–¥–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
            showCustomizationModal(setName, this);
        });
    });
    
    // –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ö–ê–°–¢–û–ú–ò–ó–ê–¶–ò–ò (–ü–†–û–°–¢–û–ï)
    function showCustomizationModal(setName, triggerElement) {
        const modal = document.createElement('div');
        modal.innerHTML = `
            <div class="modal-overlay" style="
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(31, 31, 31, 0.8);
                z-index: 20000;
                display: flex;
                align-items: center;
                justify-content: center;
                backdrop-filter: blur(5px);
            ">
                <div class="modal-content" style="
                    background: var(--color-white);
                    padding: 40px;
                    border-radius: 8px;
                    max-width: 500px;
                    width: 90%;
                    text-align: center;
                    font-family: var(--font-body);
                ">
                    <h3 style="
                        font-family: var(--font-headings);
                        font-size: 1.5rem;
                        color: var(--color-iron-black);
                        margin-bottom: 20px;
                        text-transform: uppercase;
                    ">–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞</h3>
                    <p style="
                        margin-bottom: 30px;
                        color: var(--color-text-light);
                        line-height: 1.6;
                    ">
                        –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Å–æ—Å—Ç–∞–≤–∞ ${setName} –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. 
                        –°–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∞–±–æ—Ä –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏.
                    </p>
                    <div style="display: flex; gap: 15px; justify-content: center;">
                        <button class="modal-close" style="
                            padding: 12px 24px;
                            background: var(--color-stone-gray);
                            border: none;
                            border-radius: 4px;
                            font-family: var(--font-headings);
                            font-weight: 600;
                            cursor: pointer;
                            text-transform: uppercase;
                            letter-spacing: 0.5px;
                        ">–ü–æ–Ω—è—Ç–Ω–æ</button>
                        <button class="modal-order" style="
                            padding: 12px 24px;
                            background: var(--color-wine-red);
                            color: white;
                            border: none;
                            border-radius: 4px;
                            font-family: var(--font-headings);
                            font-weight: 600;
                            cursor: pointer;
                            text-transform: uppercase;
                            letter-spacing: 0.5px;
                        ">–ó–∞–∫–∞–∑–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π</button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        modal.querySelector('.modal-close').addEventListener('click', () => {
            document.body.removeChild(modal);
        });
        
        modal.querySelector('.modal-order').addEventListener('click', () => {
            document.body.removeChild(modal);
            // –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∫—É–ø–∫–∏
            const buyButton = triggerElement.closest('.set-item').querySelector('.set-buy-btn');
            buyButton.click();
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
        modal.querySelector('.modal-overlay').addEventListener('click', (e) => {
            if (e.target === e.currentTarget) {
                document.body.removeChild(modal);
            }
        });
    }
    
    // –ê–ù–ò–ú–ê–¶–ò–ò –ü–û–Ø–í–õ–ï–ù–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
    function initAnimations() {
        const setItems = document.querySelectorAll('.set-item');
        
        setItems.forEach((item, index) => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(50px)';
            
            setTimeout(() => {
                item.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
                item.style.opacity = '1';
                item.style.transform = 'translateY(0)';
            }, index * 200);
        });
    }
    
    // –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –°–ö–†–û–õ–õ–ò–ù–ì–ê –î–õ–Ø –ê–ù–ò–ú–ê–¶–ò–ô
    function initScrollAnimations() {
        const recommendations = document.querySelectorAll('.recommendation');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, { threshold: 0.3 });
        
        recommendations.forEach(rec => {
            rec.style.opacity = '0';
            rec.style.transform = 'translateY(30px)';
            rec.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(rec);
        });
    }
    
    // –†–ê–°–ß–ï–¢ –ò –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –≠–ö–û–ù–û–ú–ò–ò –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò
    function highlightSavings() {
        const priceElements = document.querySelectorAll('.set-pricing');
        
        priceElements.forEach(pricing => {
            const currentPrice = parseInt(pricing.querySelector('.price-current').textContent);
            const oldPrice = parseInt(pricing.querySelector('.price-old').textContent);
            const savings = oldPrice - currentPrice;
            const percentage = Math.round((savings / oldPrice) * 100);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–≥–æ–¥–µ
            if (!pricing.querySelector('.savings-highlight')) {
                const savingsElement = document.createElement('div');
                savingsElement.className = 'savings-highlight';
                savingsElement.innerHTML = `üí∞ –≠–∫–æ–Ω–æ–º–∏—è: ${savings} ‚ÇΩ`;
                savingsElement.style.cssText = `
                    background: linear-gradient(135deg, #2E7D32 0%, #1B5E20 100%);
                    color: white;
                    padding: 8px 16px;
                    margin-top: 10px;
                    border-radius: 20px;
                    font-family: var(--font-headings);
                    font-weight: 600;
                    font-size: 14px;
                    display: inline-block;
                `;
                pricing.appendChild(savingsElement);
            }
        });
    }
    
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    initAnimations();
    initScrollAnimations();
    highlightSavings();
    
    console.log('üéÅ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–±–æ—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –ì–æ—Ç–æ–≤—ã –∫ –ø—Ä–æ–¥–∞–∂–∞–º —Å –≤—ã–≥–æ–¥–æ–π.');
}); 